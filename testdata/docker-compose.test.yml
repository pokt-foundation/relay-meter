version: "3.5"

services:
  # Relay Meter Containers
  relay-meter-collector:
    build:
      context: ..
      dockerfile: Dockerfile.production.collector
    container_name: relay-meter-collector
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
      POSTGRES_HOST: relay-meter-db:5434
      MAX_ARCHIVE_AGE: 60
      COLLECTION_INTERVAL_SECONDS: 10
      POSTGRES_USE_PRIVATE: "n"
    depends_on:
      relay-meter-db:
        condition: service_healthy
      portal-http-db:
        condition: service_healthy
      portal-db:
        condition: service_healthy

  relay-meter-apiserver:
    build:
      context: ..
      dockerfile: Dockerfile.production.apiserver
    container_name: relay-meter-apiserver
    restart: always
    ports:
      - "9898:9898"
    environment:
      API_KEYS: test_api_key_1234
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
      POSTGRES_HOST: relay-meter-db:5434
      BACKEND_API_URL: http://portal-http-db:8080
      BACKEND_API_TOKEN: test_api_key_6789
      POSTGRES_USE_PRIVATE: "n"
    depends_on:
      relay-meter-db:
        condition: service_healthy
      relay-meter-collector:
        condition: service_started
      portal-http-db:
        condition: service_healthy
      portal-db:
        condition: service_healthy

  # Relay Meter Databases
  relay-meter-db:
    image: postgres:13.7
    container_name: relay-meter-db
    restart: always
    ports:
      - "5434:5434"
    command: -p 5434
    environment:
      POSTGRES_PASSWORD: pgpassword
    volumes:
      - ./schema.test.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: pg_isready -U postgres -p 5434
      interval: 5s
      retries: 5
    depends_on:
      portal-http-db:
        condition: service_healthy
      portal-db:
        condition: service_healthy

  # Portal HTTP DB Containers
  portal-http-db:
    container_name: portal-http-db
    build: github.com/pokt-foundation/portal-http-db.git#master
    ports:
      - "8080:8080"
    environment:
      PG_USER: postgres
      PG_PASSWORD: pgpassword
      PG_HOST: portal-db
      PG_PORT: 5432
      PG_DATABASE: postgres
      API_KEYS: test_api_key_6789
      PORT: 8080
      APP_ENV: test
    depends_on:
      portal-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5

  portal-db:
    image: pocketfoundation/test-portal-postgres:latest
    container_name: portal-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      retries: 5
